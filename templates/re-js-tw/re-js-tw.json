{
    "package.json": { 
        "name": "template",
        "version": "0.1.0",
        "license": "MIT",
        "private": false,
        "author": {
            "name": "@FedeHide"
        },
        "scripts": {
            "dev": "next dev",
            "build": "next build",
            "postbuild": "next-sitemap",
            "start": "next start",
            "lint": "eslint src"
        }        
    },
    "eslint.config.mjs": "import { dirname } from 'path'\nimport { fileURLToPath } from 'url'\nimport { FlatCompat } from '@eslint/eslintrc'\nimport unusedImports from 'eslint-plugin-unused-imports'\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = dirname(__filename)\n\nconst compat = new FlatCompat({\n\tbaseDirectory: __dirname,\n})\n\nexport default [\n\t...compat.extends(\n\t\t'next/core-web-vitals',\n\t\t'prettier',\n\t\t'plugin:prettier/recommended',\n\t\t'plugin:react/recommended',\n\t\t'plugin:react-hooks/recommended',\n\t\t'plugin:promise/recommended',\n\t\t'plugin:jsx-a11y/recommended',\n\t),\n\n\t{\n\t\tignores: [\n\t\t\t'node_modules/**',\n\t\t\t'.next/**',\n\t\t\t'out/**',\n\t\t\t'build/**',\n\t\t\t'dist/**',\n\t\t\t'public/**',\n\t\t\t'yarn.lock',\n\t\t\t'package-lock.json',\n\t\t],\n\t\tlanguageOptions: {\n\t\t\tparserOptions: {\n\t\t\t\tecmaVersion: 'latest',\n\t\t\t\tsourceType: 'module',\n\t\t\t},\n\t\t},\n\t\tplugins: {\n\t\t\t'unused-imports': unusedImports,\n\t\t},\n\t\tsettings: {\n\t\t\t'import/resolver': {\n\t\t\t\tnode: true,\n\t\t\t},\n\t\t},\n\t\trules: {\n\t\t\t// ---- Prettier ----\n\t\t\t'prettier/prettier': [\n\t\t\t\t'error',\n\t\t\t\t{\n\t\t\t\t\tsemi: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\t// ---- Imports ----\n\t\t\t'unused-imports/no-unused-imports': 'warn',\n\t\t\t'unused-imports/no-unused-vars': [\n\t\t\t\t'warn',\n\t\t\t\t{\n\t\t\t\t\tvars: 'all',\n\t\t\t\t\tvarsIgnorePattern: '^_',\n\t\t\t\t\targs: 'after-used',\n\t\t\t\t\targsIgnorePattern: '^_',\n\t\t\t\t},\n\t\t\t],\n\t\t\t// ---- React ----\n\t\t\t'react/prop-types': 'off',\n\t\t\t'react/react-in-jsx-scope': 'off',\n\t\t\t// ---- React Hooks ----\n\t\t\t'react-hooks/rules-of-hooks': 'error',\n\t\t\t'react-hooks/exhaustive-deps': 'warn',\n\t\t\t// ---- Promises ----\n\t\t\t'promise/always-return': 'warn',\n\t\t\t'promise/catch-or-return': 'warn',\n\t\t},\n\t},\n]\n",
    ".prettierignore": "*.md\n*LICENSE\n/node_modules\n.next\nnext-env.d.ts\npublic\nyarn.lock\npackage-lock.json\n/dist\n\n# css\n*.css.map\n\n# typescript\n*.js.map",
    ".prettierrc.json": {
        "printWidth": 100,
        "trailingComma": "all",
        "tabWidth": 4,
        "useTabs": true,
        "semi": false,
        "singleQuote": true,
        "bracketSpacing": true,
        "arrowParens": "always",
        "endOfLine": "auto",
        "plugins": ["prettier-plugin-tailwindcss"],
        "tailwindFunctions": ["clsx", "cn", "twMerge"]
    },
    "CONTRIBUTING.md": "# CONTRIBUTING\n\nTo keep the codebase organized and maintain a clean history, we follow a strict Pull Request workflow.\n\n## Recommended Communication Style\n\n* Always leave screenshots for visuals changes\n* Always leave a detailed description in the Pull Request. Leave nothing ambiguous for the reviewer.\n* Always review your code first. Do this by leaving comments in your coding noting questions, or interesting things for the reviewer.\n* Always communicate. Whether it is in the issue or the pull request, keeping the lines of communication helps everyone around you.\n\n## Workflow\n\n1. **Fork the repository**.\n\n2. **Clone your fork locally**:\n\n\t```bash\n\tgit clone TODO: CHANGE -> git@github.com:your-username/project-name.git\n\t```\n\n3. **Add upstream remote**:\n\n\t```bash\n\tgit remote add upstream TODO: CHANGE -> git@github.com:client-username/project-name.git\n\tgit fetch upstream\n\t```\n\n4. **Create a new branch** for your work:\n\n\t```bash\n\tgit switch -c feature/your-feature-name\n\t```\n\n5. Make your changes **committing small**. Follow the same convention as in the CHANGELOG:\n\n\t- `feat:` A new feature\n\t- `fix:` A bug fix\n\t- `chores:` Other changes, updates, refactors, or non-feature tasks\n\n6. **Sync your branch with upstream** before creating a PR:\n\n\t```bash\n\tgit fetch upstream\n\tgit switch main\n\tgit merge upstream/main # or `git pull client main`\n\tgit switch feature/your-feature-name\n\tgit rebase main\n\t```\n\n\t**Note:** Rebase rewrites your branch commit history to be on top of the latest main. This keeps the history clean. Do not rebase branches that others are working on.\n\n7. **Install dependencies and check lint** locally before pushing:\n\n\t```bash\n\tpnpm install\n\tpnpm lint\n\t```\n\n8. **Push your branch** to your fork:\n\n\t```bash\n\tgit push origin feature/your-feature-name\n\t```\n\n9. **Open a Pull Request** targeting the `main` branch in the upstream repository.\n\n### PR Validation\n\n* If you've added code that should be tested, add tests.\n* If you've changed APIs, update the documentation.\n* If you make visual changes, screenshots are required.\n* If any, ensure the test suite passes.\n* Ensure that you deal with any lint warnings.\n* If you refactor the existing code, please let us know in your PR description.\n* A PR description and title are required. Make sure to use the commit message convention.\n* [Link to an issue](https://help.github.com/en/github/writing-on-github/autolinked-references-and-urls) in the project. Unsolicited code is welcomed, but an issue is required for announce your intentions. PR's without a linked issue will be marked invalid and closed.\n\nExamples for valid PR titles:\n\n- fix: Correct typo.\n- feat: Add user authentication feature.\n- refactor!: Improve error handling in login module.\n\n_Note that since PR titles only have a single line, you have to use the ! syntax for breaking changes._\n\nSee [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) for more examples.\n\n## Issues\n\nIf you plan to contribute a change based on an open issue, assign yourself. Issues that are not assigned are assumed open, and to avoid conflicts, please assign yourself before beginning work on any issues.\n\n## Notes\n\n- Always pull the latest changes from upstream before starting a new feature.\n- PRs should pass all CI/CD checks before merging.\n- Keep branches focused on a single feature or fix.\n- Avoid pushing directly to main; all changes should go through PRs.\n\nThank you for helping us keep this project clean and maintainable!",
    "LICENSE": "MIT License © 2025-Present Fede Hide\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nCopyright © 2025 Fede Hide\n\nThis software and its source code are the exclusive property of the Client TODO: CHANGE -> [Client Name].\nAll rights reserved.\n\nThe Client is granted the rights to:\n- Use the software for internal operations.\n- Modify the software for internal use.\n- Distribute the software only within their organization.\n\nIt is strictly prohibited to:\n- Redistribute, sell, or sublicense the software outside the Client without written permission from the author.\n- Use the software in third-party projects without written authorization from the author.\n\nThe software is provided 'as is', without any warranty, express or implied.\nThe author shall not be liable for any damages or losses arising from the use of the software.",
    ".gitignore": "# production\n/build\n#dist/\nNOTES.md\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.js\n.yarn/install-state.gz\n\n# testing\n/coverage\n\n# next.js\n/.next/\n/out/\n\n# debug logs\nlogs\n*.log\nlerna-debug.log*\npnpm-debug.log*\npnpm-error.log*\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# env files\n.env\n.env*.local\n.env.production\n.env.development.local\n.env.test.local\n.env.production.local\n\n# vercel\n.vercel\n\n# prisma db\nprisma/dev.db\n\n# typescript\n*.tsbuildinfo\nnext-env.d.ts\n\n# Editor directories and files\n.vscode/*\n!.vscode/extensions.json\n.vscode-test\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n# sass\n.sass-cache/\n*.css.map\n*.sass.map\n*.scss.map\n\n# misc\n*.pem\n\n# OS generated files\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n\n# Diagnostic reports\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Compiled binary addons\nbuild/Release\n\n# eslint cache\n.eslintcache",
    "CHANGELOG.md": "# Changelog\n\n## [v0.1.0](https://github.com/FedeHide/REPO/releases/tag/v0.1.0) (yyyy-mm-dd)\n\n### Features\n\n* **example:** added media queries for responsive ([8681738](commit))",
    "README.md": "# Title\n\n### Check the site [Here](https://acme.com/ \" acme\")\n\n## Introduction\nThis project is ...\n\n## Technologies Used\n<div>\n\t<a href=\"https://skillicons.dev\">\n\t\t<img src=\"https://skillicons.dev/icons?i=nextjs,ts,tailwind\" />\n\t</a>\n</div>\n\n------------\n\n<!-- [![acme-ss.webp](/public/assets/acme-ss.webp)](https://acme.com/) -->\n\n## Features\n\n- 📑 \n\n## License\n\n© 2025-Present by [Fede Hide](https://github.com/FedeHide). Licensed under the MIT License.\n",
    "RATE_LIMITER.md": "# Rate Limiting Implementation\n\n## Overview\n\nThis implementation adds rate limiting to the contact form to prevent spam and bot attacks. It uses an in-memory storage system with configurable limits.\n\n## Configuration\n\nThe rate limiter is configured in `/src/lib/rateLimiter.ts` with the following default settings:\n\n- **Max Attempts**: 3 submissions per window\n- **Time Window**: 15 minutes (900,000 ms)\n- **Storage**: In-memory Map (resets on server restart)\n\n## How it Works\n\n1. **IP Tracking**: Each submission is tracked by the client's IP address\n2. **Counter System**: Tracks submission attempts within the time window\n3. **Automatic Cleanup**: Expired entries are automatically removed\n4. **Graceful Degradation**: If IP cannot be determined, uses 'unknown' as fallback\n\n## Headers Checked for IP Detection\n\nThe system checks the following headers in order:\n1. `x-forwarded-for` (most common proxy header)\n2. `x-real-ip` (nginx real IP)\n3. `x-vercel-forwarded-for` (Vercel-specific)\n\n## Response Format\n\nThe `submitContactForm` function now returns additional rate limit information:\n\n```typescript\n{\n\tsuccess: boolean\n\terror?: string\n\trateLimitInfo?: {\n\t\tremaining: number    // Attempts remaining in current window\n\t\tresetTime: number    // Timestamp when the limit resets\n\t}\n}\n```\n\n## Error Messages\n\nWhen rate limited, users will see:\n\n```\n\"Too many requests. Please try again in X minutes.\"\n```\n\n## Frontend Integration Example\n\n```typescript\nconst handleSubmit = async (formData: FormData) => {\n\tconst result = await submitContactForm(formData)\n\t\n\tif (!result.success) {\n\t\tif (result.rateLimitInfo) {\n\t\t\t// Handle rate limit error\n\t\t\tconst resetDate = new Date(result.rateLimitInfo.resetTime)\n\t\t\tconsole.log(`Rate limited. ${result.rateLimitInfo.remaining} attempts remaining.`)\n\t\t\tconsole.log(`Resets at: ${resetDate.toLocaleTimeString()}`)\n\t\t}\n\t\t// Show error message\n\t\tsetError(result.error)\n\t} else {\n\t\t// Success - show confirmation\n\t\tconsole.log(`Success! ${result.rateLimitInfo?.remaining} attempts remaining.`)\n\t}\n}\n```\n\n## Customization\n\nTo adjust rate limiting settings, modify the `RATE_LIMIT_CONFIG` object in `/src/lib/rateLimiter.ts`:\n\n```typescript\nconst RATE_LIMIT_CONFIG = {\n\tmaxAttempts: 5,           // Allow 5 attempts\n\twindowMs: 30 * 60 * 1000, // 30 minute window\n}\n```\n\n## Production Considerations\n\n### Pros of This Implementation:\n- ✅ Simple and lightweight\n- ✅ No external dependencies\n- ✅ Works immediately\n- ✅ Configurable limits\n\n### Limitations:\n- ⚠️ Memory-based (resets on server restart)\n- ⚠️ Not shared across multiple server instances\n- ⚠️ Could be bypassed by changing IP (VPN/proxy)\n\n### For High-Traffic Production:\nConsider upgrading to:\n- Redis-based rate limiting for persistence\n- Database storage for cross-instance sharing  \n- More sophisticated bot detection (CAPTCHA, etc.)\n- IP whitelisting for trusted sources\n\n## Testing\n\nTo test the rate limiting:\n\n1. Submit the contact form 3 times quickly\n2. The 4th attempt should be blocked with a rate limit error\n3. Wait 15 minutes or restart the development server\n4. Attempts should be allowed again\n\n## Security Notes\n\n- IP addresses are not logged or stored permanently\n- The system is designed to be privacy-friendly\n- Rate limits reset automatically without manual intervention\n- Graceful fallback for edge cases (unknown IP, etc.)",
    "next.config.mjs": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n\treactStrictMode: true,\n};\n\nexport default nextConfig\n",
    "globals.css": "@import './base/index.css' layer(base);\n@import 'tailwindcss';",
    "base.index.css": "@import './reset.css';",
    "reset.css": "/* Global box-sizing and inherited typography */\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n\tfont: inherit;\n}\n\n/* Smooth scroll only if reduced motion is not preferred */\nhtml {\n\tfont-size: 100%;\n\thanging-punctuation: first last;\n\toverflow-x: hidden;\n}\n\nhtml:focus-within {\n\tscroll-behavior: smooth;\n}\n\n/* Reduce motion: disables animations for accessibility */\n@media (prefers-reduced-motion: reduce) {\n\thtml:focus-within {\n\t\tscroll-behavior: auto;\n\t}\n\n\t*,\n\t*::before,\n\t*::after {\n\t\tanimation-duration: 0.01ms !important;\n\t\tanimation-iteration-count: 1 !important;\n\t\ttransition-duration: 0.01ms !important;\n\t\tscroll-behavior: auto !important;\n\t}\n}\n\n/* Apply smooth scroll if there are :has(:target) elements (limited support) */\n@media (prefers-reduced-motion: no-preference) {\n\t:has(:target) {\n\t\tscroll-padding-top: 3rem;\n\t\tscroll-behavior: smooth;\n\t}\n}\n\n/* Base body styling */\nbody {\n\tline-height: 1.5;\n\ttext-rendering: optimizeSpeed;\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system,\n\t\tBlinkMacSystemFont,\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\t'Helvetica Neue',\n\t\tsans-serif;\n}\n\n/* Basic links */\na {\n\ttext-decoration: none;\n\tcursor: pointer;\n}\n\n/* Improve accessibility for focus */\n:focus-visible {\n\toutline: 2px solid currentColor;\n\toutline-offset: 2px;\n}\n\n/* Responsive media */\nimg,\npicture,\nvideo,\nsvg {\n\tdisplay: block;\n\tmax-width: 100%;\n\theight: auto;\n}\n\n/* Base image styling */\nimg {\n\tvertical-align: middle;\n\tfont-style: italic;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tshape-margin: 0.75rem;\n}\n\n/* Remove number input spinners */\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n\t-webkit-appearance: none;\n\tmargin: 0;\n}\n\ninput[type='number'] {\n\tappearance: textfield;\n}\n\n/* Buttons and button-like elements */\nbutton,\n[role='button'] {\n\tcursor: pointer;\n}\n\n/* Textarea settings */\ntextarea {\n\tresize: vertical;\n}\n\n/* Basic fieldset structure without margin/padding */\nfieldset {\n\tborder: none;\n\tpadding: 0;\n\tmargin: 0;\n}\n\n/* Balanced headings */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\ttext-wrap: balance;\n}\n\n/* Readable paragraphs and list items */\np,\nli {\n\ttext-wrap: pretty;\n}\n\n/* Lists without default decoration */\nul,\nol {\n\tlist-style: none;\n\tpadding-left: 0;\n}",
    "page.module.css": ".h1 {\n\tfont-size: 36px;\n}",
    "layout.jsx": "import { generateStaticMetadata } from '@/lib/generateStaticMetadata'\nimport { Geist, Geist_Mono } from 'next/font/google'\nimport '../styles/globals.css'\n\nconst geistSans = Geist({ variable: '--font-geist-sans', subsets: ['latin'] })\nconst geistMono = Geist_Mono({ variable: '--font-geist-mono', subsets: ['latin'] })\nexport const viewport = {\n\twidth: 'device-width',\n\tinitialScale: 1,\n\tthemeColor: [\n\t\t{ media: '(prefers-color-scheme: dark)', color: '#000000' },\n\t\t{ media: '(prefers-color-scheme: light)', color: '#ffffff' },\n\t],\n}\nexport const metadata = generateStaticMetadata()\nexport default function RootLayout({\n\tchildren,\n}) {\n\treturn (\n\t\t<html lang=\"en\" data-scroll-behavior=\"smooth\">\n\t\t\t<body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n\t\t\t\t{children}\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n",
    "page.jsx": "import styles from './page.module.css'\n\nexport default function Home() {\n\treturn (\n\t\t<>\n\t\t\t<h1 className={styles.h1}>Home</h1>\n\t\t\t<p className=\"text-3xl\">Project</p>\n\t\t</>\n\t)\n}\n",
    "middleware.js": "import { corsMiddleware } from './lib/corsMiddleware'\n\n/**\n * Middleware function that processes incoming requests through multiple middleware layers\n * @param request - The incoming NextRequest object representing the HTTP request.\n * @returns - NextResponse or undefined depending on the middleware logic.\n * If any middleware fails, it returns a response with an appropriate status code.\n * If all middlewares succeed, the request proceeds to the next handler.\n */\nexport function middleware(request) {\n\tconst corsResponse = corsMiddleware(request)\n\tif (corsResponse !== undefined) return corsResponse\n}\n\nexport const config = {\n\tmatcher: ['/api/:path*'], // Match any path starting with /api/\n}\n",
    "LogExecEnv.js": "/**\n * This function shows in console if the current component is rendered in client or server\n * @param componentName - The name of the component to log\n * @returns null\n */\n\nexport function LogExecEnv({ componentName }) {\n\tconst message =\n\t\ttypeof window === 'undefined'\n\t\t\t? `[${componentName}] executes in SERVER (SSR)`\n\t\t\t: `[${componentName}] executes in CLIENT (Browser)`\n\n\tconsole.log(message)\n\treturn null\n}\n",
    "generateStaticMetadata.js": "const BASE_URL = 'https://acme.com'\n\nexport function generateStaticMetadata(): Metadata {\n\treturn {\n\t\tmetadataBase: new URL(BASE_URL),\n\t\ttitle: {\n\t\t\ttemplate: 'Acme | %s',\n\t\t\tdefault: 'Acme',\n\t\t\tabsolute: 'Acme',\n\t\t},\n\t\tdescription: 'description example',\n\t\tkeywords: ['keyword1', 'keyword2'],\n\t\tgenerator: 'Acme',\n\t\tapplicationName: 'Acme',\n\t\treferrer: 'origin-when-cross-origin',\n\t\tauthors: [{ name: 'FedeHide', url: 'https://federicorossi.vercel.app/en' }],\n\t\tcreator: 'FedeHide',\n\t\tpublisher: 'Acme',\n\t\topenGraph: {\n\t\t\ttitle: 'Acme',\n\t\t\tdescription: 'description example',\n\t\t\turl: `${BASE_URL}`,\n\t\t\tsiteName: 'Acme',\n\t\t\ttype: 'website',\n\t\t\timages: ['/assets/screenshot-ss.webp'], // 1200x630\n\t\t},\n\t\trobots: {\n\t\t\tindex: true,\n\t\t\tfollow: true,\n\t\t\tnocache: false,\n\t\t\tgoogleBot: {\n\t\t\t\tindex: true,\n\t\t\t\tfollow: true,\n\t\t\t\tnoimageindex: false,\n\t\t\t\t'max-video-preview': -1,\n\t\t\t\t'max-image-preview': 'large',\n\t\t\t\t'max-snippet': -1,\n\t\t\t},\n\t\t},\n\t\ticons: {\n\t\t\ticon: [\n\t\t\t\t{ url: '/favicon.ico', type: 'image/x-icon' },\n\t\t\t\t{ url: '/icon0.svg', type: 'image/svg+xml' },\n\t\t\t\t{ url: '/icon1.png', type: 'image/png' },\n\t\t\t],\n\t\t\tapple: [{ url: '/apple-icon.png', type: 'image/png' }],\n\t\t},\n\t\tmanifest: '/manifest.json',\n\t\ttwitter: {\n\t\t\tcard: 'summary_large_image',\n\t\t\ttitle: 'Acme',\n\t\t\tdescription: 'description example',\n\t\t\tsite: BASE_URL,\n\t\t\timages: ['/assets/screenshot-ss.webp'], // 1200x630\n\t\t},\n\t\tother: {\n\t\t\t'application-name': 'Acme',\n\t\t\t'mobile-web-app-capable': 'yes',\n\t\t\t'apple-mobile-web-app-title': 'Acme',\n\t\t\t'apple-mobile-web-app-status-bar-style': 'black-translucent',\n\t\t\t'msapplication-TileColor': '#0f1014', // change to match the theme color\n\t\t\t'mask-icon': '/icon0.svg',\n\t\t\t'msapplication-navbutton-color': '#0f1014', // change to match the theme color\n\t\t},\n\t}\n}\n",
    "useScrollToRef.js": "import { RefObject } from 'react'\n\n/**\n * Custom hook to scroll to a specific element reference.\n * @param elementRef - The ref of the element to scroll to.\n * @param offset - The offset from the top of the element.\n */\nexport function useScrollToRef(\n\telementRef,\n\toffset = 0,\n) {\n\tconst scroll = () => {\n\t\tif (elementRef.current) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tconst elementTop = elementRef.current!.getBoundingClientRect().top + window.scrollY\n\t\t\t\tconst targetScroll = elementTop - offset\n\n\t\t\t\twindow.scrollTo({\n\t\t\t\t\ttop: targetScroll,\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\treturn scroll\n}\n",
    "corsMiddleware.js": "import { NextResponse } from 'next/server'\n\n/**\n * List of allowed origins. Add or remove domains as needed.\n */\nconst allowedOrigins = [\n\t'https://acme.com/',\n\t'https://www.acme.com/',\n\t// 'http://localhost:3000', // Uncomment for local testing\n]\n\n/**\n * Middleware to handle CORS\n * @param request NextRequest\n * @returns NextResponse\n */\nexport function corsMiddleware(request) {\n\tconst origin = request.headers.get('origin') ?? ''\n\n\t// Handle OPTIONS requests for preflight\n\tif (request.method === 'OPTIONS') {\n\t\tconst response = NextResponse.next()\n\t\tresponse.headers.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')\n\t\tresponse.headers.set('Access-Control-Allow-Headers', 'Content-Type')\n\n\t\tif (allowedOrigins.includes(origin)) {\n\t\t\tresponse.headers.set('Access-Control-Allow-Origin', origin)\n\t\t}\n\n\t\treturn response\n\t}\n\n\t// Validate origin for other requests\n\tif (allowedOrigins.includes(origin)) {\n\t\tconst response = NextResponse.next()\n\t\tresponse.headers.set('Access-Control-Allow-Origin', origin)\n\t\tresponse.headers.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')\n\t\tresponse.headers.set('Access-Control-Allow-Headers', 'Content-Type')\n\t\tresponse.headers.set('Access-Control-Allow-Credentials', 'true')\n\t\treturn response\n\t}\n\n\t// Respond with 403 if origin is not allowed\n\treturn NextResponse.json({ message: 'CORS not allowed for this origin' }, { status: 403 })\n}\n",
    "rateLimiter.js": "// map to track rate limit info per identifier\nconst rateLimitMap = new Map()\n\nconst RATE_LIMIT_CONFIG = {\n\tmaxAttempts: 3,\n\twindowMs: 15 * 60 * 1000, // 15 minutes time window\n}\n\n/**\n * cleans up expired entries from the rate limit map to prevent memory leaks\n * this function is called periodically during rate limit checks\n */\nfunction cleanupExpiredEntries() {\n\tconst now = Date.now()\n\tfor (const [key, entry] of rateLimitMap.entries()) {\n\t\tif (now > entry.resetTime) {\n\t\t\trateLimitMap.delete(key)\n\t\t}\n\t}\n}\n\n/**\n * verifies if an IP address is rate limited\n * @param {string} identifier - unique identifier (IP address)\n * @returns {boolean} - true if rate limited, false otherwise\n */\nexport function isRateLimited(identifier) {\n\tcleanupExpiredEntries()\n\n\tconst now = Date.now()\n\tconst entry = rateLimitMap.get(identifier)\n\n\tif (!entry) {\n\t\trateLimitMap.set(identifier, {\n\t\t\tcount: 1,\n\t\t\tresetTime: now + RATE_LIMIT_CONFIG.windowMs,\n\t\t})\n\t\treturn false\n\t}\n\n\t// check if the time window has passed\n\tif (now > entry.resetTime) {\n\t\trateLimitMap.set(identifier, {\n\t\t\tcount: 1,\n\t\t\tresetTime: now + RATE_LIMIT_CONFIG.windowMs,\n\t\t})\n\t\treturn false\n\t}\n\n\t// check if max attempts exceeded\n\tif (entry.count >= RATE_LIMIT_CONFIG.maxAttempts) {\n\t\treturn true\n\t}\n\n\tentry.count += 1\n\treturn false\n}\n\n/**\n * obtains rate limit info for a given identifier\n * @param {string} identifier - IP address\n * @returns {{ isLimited: boolean, remaining: number, resetTime: number }} - rate limit status\n */\nexport function getRateLimitInfo(identifier) {\n\tcleanupExpiredEntries()\n\n\tconst now = Date.now()\n\tconst entry = rateLimitMap.get(identifier)\n\n\t// if no entry or window has passed, return full quota\n\tif (!entry || now > entry.resetTime) {\n\t\treturn {\n\t\t\tisLimited: false,\n\t\t\tremaining: RATE_LIMIT_CONFIG.maxAttempts - 1,\n\t\t\tresetTime: now + RATE_LIMIT_CONFIG.windowMs,\n\t\t}\n\t}\n\n\tconst remaining = Math.max(0, RATE_LIMIT_CONFIG.maxAttempts - entry.count)\n\tconst isLimited = remaining === 0\n\n\treturn {\n\t\tisLimited,\n\t\tremaining,\n\t\tresetTime: entry.resetTime,\n\t}\n}\n\n/**\n * Obtains the client's IP address from the request headers\n * @param {Headers} headers - Request Headers\n * @returns {string} The client's IP address\n */\nexport function getClientIP(headers) {\n\t// Common headers used by proxies and CDNs to forward the real client IP\n\tconst forwardedFor = headers.get('x-forwarded-for')\n\tconst realIP = headers.get('x-real-ip')\n\tconst remoteAddr = headers.get('x-vercel-forwarded-for') // for vercel\n\n\t// Prioritize x-forwarded-for as it may contain a list of IPs\n\tif (forwardedFor) {\n\t\treturn forwardedFor.split(',')[0].trim()\n\t}\n\n\tif (realIP) {\n\t\treturn realIP.trim()\n\t}\n\n\tif (remoteAddr) {\n\t\treturn remoteAddr.split(',')[0].trim()\n\t}\n\n\t// Fallback - this should not happen in production\n\treturn 'unknown'\n}\n",
    "next-sitemap.config.js": "/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n\tsiteUrl: 'https://acme.com/',\n\texclude: [\n\t\t'/src/app/apple-icon.png',\n\t\t'/src/app/manifest.json',\n\t\t'/web-app-manifest-192x192.png',\n\t\t'/web-app-manifest-512x512.png',\n\t\t'/src/app/icon0.svg',\n\t\t'/src/app/icon1.png',\n\t\t'/src/app/favicon.ico',\n\t\t'/assets/*',\n\t\t'/fonts/*',\n\t\t'/tags/*',\n\t],\n\tsitemapSize: 5000,\n\tgenerateIndexSitemap: false,\n\tgenerateRobotsTxt: true,\n\trobotsTxtOptions: {\n\t\tpolicies: [\n\t\t\t{\n\t\t\t\tuserAgent: '*',\n\t\t\t\tallow: '/',\n\t\t\t},\n\t\t],\n\t},\n}"
}
